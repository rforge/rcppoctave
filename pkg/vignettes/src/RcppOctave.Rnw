\documentclass[10pt,a4paper]{article}
%\VignetteIndexEntry{RcppOctave}
%\VignetteDepends{knitr,bibtex,}

\usepackage{Sweave}

<<echo=FALSE, include=FALSE>>=
pkg <- 'RcppOctave'
require( pkg, character.only=TRUE )
prettyVersion <- packageVersion(pkg)
pkgtitle <- packageDescription(pkg)$Title
prettyDate <- format(Sys.Date(), "%B %e, %Y")
@

\usepackage{amsmath} %math symbols
\usepackage{amssymb} %extra math symbols
\usepackage{xspace}
\usepackage{url}
\usepackage[colorlinks]{hyperref}
\usepackage{a4wide}
\setlength{\oddsidemargin}{0pt}

\usepackage[minnames=1,maxnames=2]{biblatex}
<<bib, echo=FALSE, results='asis', warning=FALSE>>=
cat("\\bibliography{", pkgBibfile(pkg),"}\n", sep='') 
@
\bibliography{Rpackages}
\newcommand{\citet}[1]{\citeauthor{#1}~\cite{#1}}

% TABLE OF CONTENTS
\usepackage{tocloft}
\renewcommand{\cftsecleader}{\cftdotfill{\cftdotsep}}
\usepackage[toc]{multitoc}

\newcommand{\matlab}{Matlab$^\circledR$\xspace}

% R stuff
\let\proglang=\textit
\let\code=\texttt 
\newcommand{\Rcode}{\texttt}
\newcommand{\pkgname}[1]{\textit{#1}}
\newcommand{\Rpkg}[1]{\pkgname{#1} package\xspace}

\newcommand{\graphwidth}{0.9\columnwidth}
%\newcommand{\revision}[2][]{\textcolor{blue}{#2}{\bf \textcolor{blue}{$\blacksquare$ REV[#1]}}}
% CRAN
\newcommand{\CRANurl}[1]{\url{http://cran.r-project.org/package=#1}}
\newcommand{\CRANpkg}[1]{\href{http://cran.r-project.org/package=#1}{\pkgname{#1}} package\footnote{\CRANurl{#1}}}
\newcommand{\citeCRANpkg}[1]{\CRANpkg{#1}~\cite{#1}}
% Bioconductor
\newcommand{\BioCurl}[1]{\url{http://www.bioconductor.org/packages/release/bioc/html/#1.html}}
\newcommand{\BioCpkg}[1]{\href{http://www.bioconductor.org/packages/release/bioc/html/#1.html}{\pkgname{#1}} package\footnote{\BioCurl{#1}}}
\newcommand{\citeBioCpkg}[1]{\BioCpkg{#1}~\cite{#1}}
% Bioconductor annotation
\newcommand{\BioCAnnurl}[1]{\url{http://www.bioconductor.org/packages/release/data/annotation/html/#1.html}}
\newcommand{\BioCAnnpkg}[1]{\href{http://www.bioconductor.org/packages/release/data/annotation/html/#1.html}{\Rcode{#1}} annotation package\footnote{\BioCAnnurl{#1}}}
\newcommand{\citeBioCAnnpkg}[1]{\BioCAnnpkg{#1}~\cite{#1}}

% clever references
\usepackage[noabbrev, capitalise, nameinlink]{cleveref}

\author{Renaud Gaujoux}
\title{\pkgname{\Sexpr{pkg}}: \Sexpr{pkgtitle}}
\date{\Rpkg{\Sexpr{pkg}} -- Version \Sexpr{prettyVersion} [\Sexpr{prettyDate}]}
\begin{document}
\maketitle

\begin{abstract}
The \Rpkg{RcppOctave} provides a direct interface to \proglang{Octave} from
\proglang{R}.
It allows \proglang{Octave} functions to be called from an \proglang{R} session, in a similar way \proglang{C/C++} or
\proglang{Fortran} functions are called using the base function~\code{.Call}.
Since \proglang{Octave} uses a language that is mostly compatible with \matlab,
the \Rpkg{RcppOctave} may also be used to run Matlab m-files.

As a matter of fact, this package was originally developed to facilitate the
port and comparison of R and Matlab code.
In particular, it provides \proglang{Octave} modules that redefine
\proglang{Octave} default random number generator functions, so that they call
\proglang{R} own dedicated functions like \code{runif}, \code{rnorm}, etc\ldots.
This enables to easily reproduce and compare stochastic computations.
\end{abstract}

%These may also be used in any Octave session, independently of R, increasing
% the range of RNGs available in Octave.

\tableofcontents

In many research fields, source code of algorithms and statistical methods are
published as Matlab files (the so called m-files).
While the code is generally released under public Open Source licenses like
the GNU Public Licenses (GPLs) \cite{gnuGPL}, effectively running/using it 
require either to have \matlab, which is a nice but expensive proprietary
software, or to be at least a bit familiar with \proglang{Octave}
\cite{Eaton2002}, which is free and open source, and is able to read and execute m-files -- as long as
these do not require Matlab-specific functions.
Arguably, \proglang{R} users may neither have Matlab, nor the
time/will required to become \proglang{Octave}-skilled, and yet want to
use or incorporate their analysis pipelines algorithms written for
Matlab.

\citeCRANpkg{Rcpp}

\section{Calling Octave functions from R}

The \pkgname package provides the function \code{.CallOctave} to call Octave
functions from R, mimicking the way native \proglang{C/C++} functions
are called with \code{.Call}:

<<sample_CallOctave>>=
	.CallOctave('eye', 3)
	.CallOctave('svd', matrix(1:9,3))
@

\section{Calling R functions from Octave}

TODO

\section{Direct interface: the \texttt{.O} object}

A convenient shortcut interface in defined by the object \code{.O} of class
\code{Octave}, exported from \Rpkg{RcppOctave} namespace:

<<sample_CallOctave>>=
	.O$eye(3)
	.O$svd(matrix(1:9,3))
@


\section{Sample session}

Comparing equivalent R and Octave functions is therefore as easy as comparing two R functions.
For example, one can compare the respective functions \code{svd} with the following code: 

<<sample_svd>>=
# define random data
X <- matrix(runif(25), 5)

# run SVD in R
svd.R <- svd(X)
# run SVD in Octave
svd.O <- .O$svd(X)
# check results
svd.O
all.equal(svd.R$d, as.numeric(svd.O))
# but not exactly identical
all.equal(svd.R$d, as.numeric(svd.O), tol=10^-16)
@

We notice here that Octave default \code{svd} returns only the eigen values as a column vector.
This is documented in its documentation that is accessible via the function \code{o\_help}, which will show it in a similar way as R documentation:

<<sample_help, eval=FALSE>>=
# show Octave help for svd
o_help(svd)
@

The documentation for -- Octave -- \code{svd} states that the complete decomposition is returned, if three output values are provided.
This can be done using argument \code{argout}: 

<<svd_complete>>=
# get full output from Octave svd
.O$svd(X, argout=3) 
@

\section*{Session information}
{\small
<<session_info, echo=FALSE, comment=NA>>=
sessionInfo()
@
}

\printbibliography[heading=bibintoc]

<<bibtex_entries, echo=FALSE, include=FALSE>>=
library(bibtex)
write.bib(c('Rcpp', 'knitr'), file='../Rpackages.bib')
@


\end{document}
